{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/message.ts","./src/app/patient-all/patient-all.component.ts","./src/app/patient-all/patient-all.component.html","./src/app/patient-save/patient-save.component.ts","./src/app/patient-save/patient-save.component.html","./src/app/patient.service.ts","./src/app/patient.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PatientAllComponent } from './patient-all/patient-all.component'; \nimport { PatientSaveComponent } from './patient-save/patient-save.component';\n\nconst routes: Routes = [\n  {path:'all',component:PatientAllComponent}, \n  {path:'add',component:PatientSaveComponent},\n  {path:'',redirectTo:'all',pathMatch:'full'},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'health-tracker-application';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-success\"> \n   \n  <a class=\"center\" href=\"#\">HEALTH TRACKER APPLICATION</a> \n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \n  data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> \n  <span class=\"navbar-toggler-icon\">\n  </span>\n </button> <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\"> \n      <ul class=\"navbar-nav\" > \n         <li class=\"nav-item active\" aria-orientation=\"horizontal\"> \n            <a class=\"nav-link text-white\" href=\"#\" routerLink=\"add\">Register Your Sugar Level </a> \n         </li> \n         <li class=\"nav-item\">\n            <a class=\"nav-link text-white\" href=\"#\" routerLink=\"all\">View All Sugar Level</a> \n         </li> \n      </ul>\n   </div>\n   </nav>\n   <mat-card style=\"padding-bottom: 10px;\">\n      <router-outlet></router-outlet>\n   </mat-card>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PatientSaveComponent } from './patient-save/patient-save.component';\nimport { PatientAllComponent } from './patient-all/patient-all.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatPaginatorModule, MatPaginator} from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport{MatCardModule} from '@angular/material/card';\nimport{MatSortModule} from '@angular/material/sort'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientSaveComponent,\n    PatientAllComponent\n  \n  ],\n  imports: [\n    BrowserModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCardModule,\n    AppRoutingModule,\n    HttpClientModule, \n    FormsModule, BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Message {\n    type:String;\n    message:String\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {PatientService} from '../patient.service';\nimport {Router} from '@angular/router';\nimport {Patient} from '../patient';\nimport {Message}  from '../message';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-patient-all',\n  templateUrl: './patient-all.component.html',\n  styleUrls: ['./patient-all.component.css']\n})\nexport class PatientAllComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'sugar_Level', 'postSugar_Level', 'testDate','type','level'];\n  dataSource = new MatTableDataSource<Patient>([]);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  patients:Patient[];\n  message:Message=new Message();\n  constructor(private service :PatientService,private router:Router) { }\n  fromDate;\n  toDate;\n  ngOnInit(): void {\n    this.dataSource.paginator=this.paginator;\n    this.dataSource.sort=this.sort;\n    this.getAllPatients();\n  }\n  dateSubmit(){\n    this.fromDate =new Date(this.fromDate);\n    this.toDate =new Date(this.toDate);\n    this.getAllPatients(true);\n  }\n  getAllPatients(key?){ \n    this.service.getAllPatients().subscribe(data=>{\n    var fromDate =new Date(\"2020-04-28\");\n    var toDate =new Date(\"2020-05-08\");\n    this.dataSource.data=data;\n    console.log(\"date\",this.dataSource.data);\n    this.dataSource.data.forEach(element=>{\n    element.testDate=new Date(element.testDate);\n    })\n    if(key==true){\n       this.dataSource.data=this.dataSource\n     .data.filter(obj=>obj.testDate>=this.fromDate && obj.testDate<=this.toDate);\n\n    }\n    \n    }, error=>{ \n        this.patients=[] \n      });\n     }\n\n}","<div>\n  <h3>ALL PATIENT DETAILS</h3>\n</div>\n<div>\n from  Date : <input type=\"date\" class=\"form-control\" [(ngModel)]=\"fromDate\" name=\"fromDate\"/>\n   To Date : <input type=\"date\" class=\"form-control\" [(ngModel)]=\"toDate\" name=\"toDate\"/>\n   <!-- <input type=\"submit\" value=\"Register\" class=\"btn btn-success\"/> -->\n   <button (click)=\"dateSubmit()\">Submit</button>\n</div>\n\n<mat-card style=\"padding-bottom: 10px;\">\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <!-- Position Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>TEST ID</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"sugar_Level\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>Fasting Sugar Level </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.sugar_Level}} </td>\n      </ng-container>\n  \n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"postSugar_Level\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef >Post Prandial Sugar Level</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.postSugar_Level}} </td>\n      </ng-container>\n  \n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"testDate\" >\n        <th mat-header-cell mat-sort-header *matHeaderCellDef> Test Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.testDate | date}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell mat-sort-header  *matHeaderCellDef > Food Type </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"level\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef> Result Level </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.level}} </td>\n      </ng-container>\n  \n      <tr mat-header-row  *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5,10,15,20]\" showFirstLastButtons></mat-paginator>\n  </div>\n</mat-card>\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {PatientService} from '../patient.service';\nimport {Patient}  from '../patient';\nimport {Message} from '../message'\n\n\n@Component({\n  selector: 'app-patient-save',\n  templateUrl: './patient-save.component.html',\n  styleUrls: ['./patient-save.component.css']\n})\nexport class PatientSaveComponent implements OnInit {\n  patient: Patient=new Patient();\n  message: Message=new Message();\n\n  constructor(private service:PatientService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  createPatient(){\n    this.service.createPatient(this.patient).subscribe(data=>{\n      this.message=data;\n    });\n    this.patient=new Patient();\n  }\n\n}\n","<h3>PATIENT SUGAR LEVEL Register</h3> \n<form (ngSubmit)=\"createPatient()\"> \n    Fasting sugar level  : <input type=\"text\" class=\"form-control\" [(ngModel)]=\"patient.sugar_Level\" name=\"sugar_Level\"/>\n    PostPrandial sugar level : <input type=\"text\" class=\"form-control\" [(ngModel)]=\"patient.postSugar_Level\" name=\"postSugar_Level\"/>\n    Date : <input type=\"date\" class=\"form-control\" [(ngModel)]=\"patient.testDate\" name=\"testDate\"/>\n    Type : <input type=\"text\" class=\"form-control\" [(ngModel)]=\"patient.type\" name=\"type\"/>\n\n    <input type=\"submit\" value=\"Register\" class=\"btn btn-success\"/>\n</form> \n{{message.message}}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Patient} from './patient';\nimport { Observable } from 'rxjs';\nimport {Message} from'./message'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  private baseUrl : string = 'http://localhost:2020/sugar';\n  constructor(private http:HttpClient) { }\n  \n\n  createPatient(patient:Patient):Observable<Message>{ \n    console.log(patient);\n    debugger;\n    return this.http.post<Message>(`${this.baseUrl}/save`,patient); \n  }\n\n  getAllPatients():Observable<Patient[]>{ \n    return this.http.get<Patient[]>(`${this.baseUrl}/all`); \n  }\n\n  getAllPatientByDate(url){\n    return this.http.get(url);\n  }\n}\n","export class Patient {\n    id:number;\n    sugar_Level:String;\n    postSugar_Level: String\n    testDate:Date;\n    type: String;\n    level: String\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}